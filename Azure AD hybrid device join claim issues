## Claims returning Computer Account attributes for user accounts

## Prerequisites

The behavior described is based in the following document when setting a hybrid environment to manually register devices in Azure AD:

https://docs.microsoft.com/en-us/azure/active-directory/devices/hybrid-azuread-join-manual-steps



## Testing the claims

The testing was done using Microsoft Claims Xrays Relying party trust on a lab environment. This tool was created with the purpose of helping you testing and troubleshooting claim issues.

https://adfshelp.microsoft.com/ClaimsXray/TokenRequest



After completing the setup, we have identified different issues where users are being affected, making them unable to access the company resources that relies in Azure services.

The issue also affects the ability to be able to register device manually causing different issues when an user account returns claim attributes that belongs only to Computer accounts.

Some of the claims needed to complete this setup, relies on whether the object is an user or a computer account to determine the identity of the user registering the device:

@RuleName = "Issue account type for domain-joined computers" 
c:[ Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/groupsid", 
Value =~ "-515$",
 Issuer =~ "^(AD AUTHORITY|SELF AUTHORITY|LOCAL AUTHORITY)$"
 ] => issue( Type = "http://schemas.microsoft.com/ws/2012/01/accounttype", Value = "DJ" );


 
While testing on a lab we can see that an user account is returning claim attributes that should be returned only if the account is an AD computer account: 

@RuleName = "Issue account type for domain-joined computers" 
c:[ Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/groupsid", 
Value =~ "-515$",
 Issuer =~ "^(AD AUTHORITY|SELF AUTHORITY|LOCAL AUTHORITY)$"
 ] => issue( Type = "http://schemas.microsoft.com/ws/2012/01/accounttype", Value = "I am a computer" );


The value returned is unexpected: 





# Finding the root cause

After the claim rules were set my user account was not returning any attributes for Computer Accounts. In AD the primaryGroupID attribute is 513, but for computer accounts is 515. The claims used to identity this value, evaluate this attribute in groupsID.

After checking the attributes for  the user I saw the correct attribute set for primgaryGroupiD: 513 





Then I tried to change this value to 515 to evaluate the values that will be returned on the claims when 515 is found in the attributes for any user. When I did, the following error was returned:





 I went to Active Directory Users and Computers, right click on the user, opened properties and clicked on "Member of". Then I made the user part of AD Group Domain Computers. (only this group has value 515 in the primaryGroupiD)





It you check the user properties, the primraygroupID for the user is still 513.

What causes the issue, is that the claim rule evaluates all groupsID and if any of those groups contains primaryGroupID 515, the claim rules will return the attributes for User and Computer Accounts.


## How to fix it

Users should not be part of Computer Account Groups.

The first thing to do is to check in AD if there is any GPO applied for the affected user group that is adding them as part of Computer Account Groups.

With this command in AD, we can get all members of "Domain Computers" Group that are Users and not computers. This is based on the attribute "ObjectClass"

#get all group members from "Domain Computers" group that are users and not computers

$members= Get-ADGroupmember -identity "Domain Computers" | Where-Object {$_.objectclass -eq 'user'} | select -Property objectguid
foreach ($user in $members) {Get-aduser -Identity $user.objectguid | select -Property userprincipalname}


This will return a list of UPN's.


We can query all groups membership for one or all users with the following commands

#get user membership
    $UserName = "<userrname>"

Import-Module ActiveDirectory 
If ($UserName) { 
    $UserName = $UserName.ToUpper().Trim() 
    $Res = (Get-ADPrincipalGroupMembership $UserName | Measure-Object).Count 
    If ($Res -GT 0) { 
        Write-Output "`n" 
        Write-Output "The User $UserName Is A Member Of The Following Groups:" 
        Write-Output "===========================================================" 
       $groups = Get-ADPrincipalGroupMembership $UserName | Select-Object -Property Objectguid
    } 
}


After checking this, and if determined that the users need to be removed from this group, we can use the following command to achieve that:

#removing users from Domain Computers group

$members= Get-ADGroupmember -identity "Domain Computers" | Where-Object {$_.objectclass -eq 'user'} | select -Property objectguid
$upns= foreach ($user in $members) {Get-aduser -Identity $user.objectguid | select -Property objectguid}
foreach ($user in $upns) {Remove-ADGroupMember -Identity "Domain Computers" -members $user.objectguid}

You can go back and double check to make sure users were removed from this group



## Error: "AADSTS500008: The SAML 1.1 credential must contain exactly one or zero claims of type http://schemas.microsoft.com/LiveID/Federation/2008/05/ImmutableID' when using hybrid environment.


<saml:Attribute AttributeNamespace="http://schemas.microsoft.com/LiveID/Federation/2008/05" AttributeName="ImmutableID">
<saml:AttributeValue><valuereturnedbasedonclaims></saml:AttributeValue>
<saml:AttributeValue><valuereturnedbasedonclaims></saml:AttributeValue>

The error is caused based on custom claim rules for office 365 and hybrid Azure device join.

@RuleName = "Office 365 Custom Rule 1"
                                       c:[Type == 
                                       "http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsaccountname"]
                                        => issue(store = "Active Directory", types = 
                                       ("http://schemas.xmlsoap.org/claims/UPN", 
                                       "http://schemas.microsoft.com/LiveID/Federation/2008/05/ImmutableID"), query = 
                                       "samAccountName={0};userPrincipalName,extensionAttribute7;{1}", param = 
                                       regexreplace(c.Value, "(?<domain>[^\\]+)\\(?<user>.+)", "${user}"), param = 
                                       c.Value);

In this case the extensionattribute7 is an extended attribute where the value is the sourceanchor ( in Sync Objectguid is referred as sourceanchor and in Azure is the ImmutableID. This value when synced to azure is converted to base64)

@RuleName = "Issue ImmutableID for computers" 
c1:[ 
Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/groupsid", 
Value =~ "-515$", Issuer =~ "^(AD AUTHORITY|SELF AUTHORITY|LOCAL AUTHORITY)$"
 ]
 &&

 c2:[ 
Type == "http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsaccountname", 
Issuer =~ "^(AD AUTHORITY|SELF AUTHORITY|LOCAL AUTHORITY)$" 
] 
=> issue(
 store = "Active Directory",
 types = ("http://schemas.microsoft.com/LiveID/Federation/2008/05/ImmutableID"), 
query = ";objectguid;{0}", param = c2.Value
 ); 


This value returns the objectguid attribute for computer accounts in AD.

Based on the behavior described above, as the user was part of Domain Computers Group, both values for attributes sourceanchor and objectguid, were returned in the claim type of ImmutableID, as the user matches both conditions for users and computers.

 
